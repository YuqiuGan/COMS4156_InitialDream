{"version":3,"sources":["firebase.js","StateProvider.js","Header.js","Login.js","Product.js","Home.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Header","basket","user","className","to","src","alt","type","onClick","signOut","email","length","Login","history","useHistory","useState","setEmail","password","setPassword","onChange","e","target","preventDefault","signInWithEmailAndPassword","then","push","catch","error","alert","message","createUserWithEmailAndPassword","Product","title","image","Home","App","dispatch","useEffect","onAuthStateChanged","authUser","console","log","path","Boolean","window","location","hostname","match","state","action","item","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0XAcMA,GAZcC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGMC,YACVV,IAASD,QCTTY,EAAeC,0BAGfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OACzB,cAACL,EAAaM,SAAd,CAAuBC,MAASC,qBAAWL,EAASC,GAApD,SACKC,KAIII,EAAgB,kBAAMC,qBAAWV,ICuD/BW,MA7Df,WAAmB,IAAD,EACuBF,IADvB,0BACLG,EADK,EACLA,OAAQC,EADH,EACGA,KASjB,OAVc,KAWV,sBAAKC,UAAU,SAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,qBACAD,UAAU,eACVE,IAAM,cACNC,IAAM,OAIV,sBAAKH,UAAU,gBAAf,UACI,uBAAOI,KAAK,OAAOJ,UAAU,wBAC7B,cAAC,IAAD,CAAYA,UAAU,0BAI1B,sBAAKA,UAAU,cAAf,UACI,cAAC,IAAD,CAAMC,IAAKF,GAAQ,SAAUC,UAAU,eAAvC,SACI,sBAAKK,QAxBD,WACZN,GACAzB,EAAKgC,WAsB8BN,UAAU,iBAArC,UACI,uBAAMA,UAAU,wBAAhB,mBAAgDD,EAAiBA,EAAKQ,MAAf,WACvD,sBAAMP,UAAU,wBAAhB,SAAyCD,EAAO,WAAa,iBAIrE,cAAC,IAAD,CAAME,GAAG,IAAID,UAAU,eAAvB,SACI,sBAAKA,UAAU,iBAAf,UACI,sBAAMA,UAAU,wBAAhB,qBACA,sBAAMA,UAAU,wBAAhB,2BAIR,cAAC,IAAD,CAAMA,UAAU,eAAhB,SACI,sBAAKA,UAAU,iBAAf,UACI,sBAAMA,UAAU,wBAAhB,kBACA,sBAAMA,UAAU,wBAAhB,wBAIR,cAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,eAA/B,SACI,sBAAKA,UAAU,uBAAf,UAEI,cAAC,IAAD,IAEA,sBAAMA,UAAU,uCAAhB,SAAwDF,EAAOU,qB,MC6ExEC,MAhEf,WACI,IAAMC,EAAUC,cADH,EAEaC,mBAAS,IAFtB,mBAENL,EAFM,KAECM,EAFD,OAGmBD,mBAAS,IAH5B,mBAGNE,EAHM,KAGIC,EAHJ,KA8Bb,OACI,sBAAKf,UAAU,QAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,qBACID,UAAU,cACVE,IAAI,cACJC,IAAM,OAId,sBAAKH,UAAU,mBAAf,UACI,yCAEA,iCACI,wCACA,uBAAOI,KAAK,OAAOX,MAAOc,EAAOS,SAAU,SAAAC,GAAC,OAAIJ,EAASI,EAAEC,OAAOzB,UAElE,0CACA,uBAAOW,KAAK,WAAWX,MAAOqB,EAAUE,SAAU,SAAAC,GAAC,OAAIF,EAAYE,EAAEC,OAAOzB,UAE5E,wBAAQW,KAAK,SAASC,QA7CvB,SAAAY,GACXA,EAAEE,iBAEF7C,EACK8C,2BAA2Bb,EAAOO,GAClCO,MAAK,SAAA/C,GACFoC,EAAQY,KAAK,QAEhBC,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAME,aAqCmB1B,UAAU,sBAAjD,wBAGJ,gMAKA,wBAAQK,QA1CH,SAAAY,GACbA,EAAEE,iBAEF7C,EACKqD,+BAA+BpB,EAAOO,GACtCO,MAAK,SAAC/C,GAECA,GACAoC,EAAQY,KAAK,QAGpBC,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAME,aA+BG1B,UAAU,wBAArC,+C,YClHD4B,MAff,YAAkC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MACrB,OACI,qBAAK9B,UAAY,UAAjB,SACI,sBAAKA,UAAY,eAAjB,UACA,mBAAGA,UAAW,0BAAd,SAAyC6B,IAGzC,qBAAK3B,IAAO4B,EAAO3B,IAAM,WCqCtB4B,MA1Cf,WACI,OACI,sBAAK/B,UAAY,aAAjB,UAGC,qBACDE,IAAM,WACNC,IAAM,KAIR,sBAAKH,UAAY,WAAjB,UACA,cAAC,IAAD,CAAMC,GAAK,YAAYD,UAAY,cAAnC,SACA,cAAC,EAAD,CACE6B,MAAQ,WACRC,MAAQ,oBAGR,cAAC,IAAD,CAAM7B,GAAK,eAAeD,UAAY,cAAtC,SACF,cAAC,EAAD,CACE6B,MAAQ,eACRC,MAAQ,uBAGP,cAAC,IAAD,CAAM7B,GAAK,kBAAkBD,UAAY,cAAzC,SACD,cAAC,EAAD,CACA6B,MAAQ,kBACRC,MAAQ,yBAGR,cAAC,IAAD,CAAM7B,GAAK,mBAAmBD,UAAY,cAA1C,SACR,cAAC,EAAD,CACQ6B,MAAQ,mBACRC,MAAQ,yBC8CDE,MAxEf,WAAgB,IAAD,EACcrC,IADd,mBACLI,EADK,KACLA,KAAOkC,EADF,KAmDb,OAhDAC,qBAAU,WAGR5D,EAAK6D,oBAAmB,SAACC,GACvBC,QAAQC,IAAI,mBAAoBF,GAK9BH,EAHEG,EAGO,CACPhC,KAAM,WACNL,KAAMqC,GAIC,CACPhC,KAAM,WACNL,KAAM,YAIX,IAyBHsC,QAAQC,IAAI,eAAgBvC,GAG1B,cAAC,IAAD,UACE,qBAAKC,UAAU,MAAf,SACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuC,KAAK,YAAZ,SACE,4CAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAGF,eAAC,IAAD,CAAOA,KAAK,IAAZ,UACE,cAAC,EAAD,IACA,cAAC,EAAD,eChEUC,QACa,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCOOvD,EApBC,SAACwD,EAAOC,GAEpB,OADAT,QAAQC,IAAIQ,GACLA,EAAO1C,MAEV,IAAK,kBAED,OAAO,2BACAyC,GADP,IAEI/C,OAAO,GAAD,mBAAM+C,EAAM/C,QAAZ,CAAoBgD,EAAOC,SAEzC,IAAK,WACD,OAAO,2BACAF,GADP,IAEI9C,KAAM+C,EAAO/C,OAErB,QACI,OAAO8C,ICbnBG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAe5D,aDVS,CACxBQ,OAAQ,GACRC,KAAM,MCQqCV,QAASA,EAApD,SACE,cAAC,EAAD,QAIJ8D,SAASC,eAAe,SFoHlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlC,MAAK,SAAAmC,GACJA,EAAaC,gBAEdlC,OAAM,SAAAC,GACLa,QAAQb,MAAMA,EAAME,c","file":"static/js/main.1bb7de78.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyA28otdTul8yjbdwMc-p7qobYIaM57Mk2o\",\r\n  authDomain: \"clone-3ac3a.firebaseapp.com\",\r\n  databaseURL: \"https://clone-3ac3a.firebaseio.com\",\r\n  projectId: \"clone-3ac3a\",\r\n  storageBucket: \"clone-3ac3a.appspot.com\",\r\n  messagingSenderId: \"969464125097\",\r\n  appId: \"1:969464125097:web:d8833d445fb9679c677bb8\",\r\n  measurementId: \"G-PDEJ2GZG5V\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { db, auth };","// setuo data layer\r\n\r\nimport React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n//This is the data layer\r\nexport const StateContext = createContext();\r\n\r\n//Build a provider\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n    <StateContext.Provider value = {useReducer(reducer, initialState)} > \r\n        {children}\r\n    </StateContext.Provider>\r\n)\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React from 'react';\r\nimport \"./Header.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ShoppingBasketIcon from\"@material-ui/icons/ShoppingBasket\";\r\nimport { auth } from './firebase';\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Header() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    // console.log(basket);\r\n\r\n    const handleLogin = () => {\r\n        if (user) {\r\n            auth.signOut();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to=\"/\">\r\n                <img \r\n                className=\"header__logo\" \r\n                src = \"CU_logo.png\"\r\n                alt = \"\"\r\n                />\r\n            </Link>\r\n            \r\n            <div className=\"header_search\">\r\n                <input type=\"text\" className=\"header__searchInput\" />\r\n                <SearchIcon className=\"header__searchIcon\" />\r\n            </div>\r\n            \r\n            \r\n            <div className=\"header__nav\">\r\n                <Link to={!user && '/login'} className=\"header__link\">\r\n                    <div onClick={handleLogin} className=\"header__option\">\r\n                        <span className=\"header__optionLineOne\">Hello {!user ? 'Guest' : user.email}</span>\r\n                        <span className=\"header__optionLineTwo\">{user ? 'Sign Out' : 'Sign In'}</span>\r\n                    </div>\r\n                </Link>\r\n                {/* 2nd link */}\r\n                <Link to=\"/\" className=\"header__link\">\r\n                    <div className=\"header__option\">\r\n                        <span className=\"header__optionLineOne\">Returns</span>\r\n                        <span className=\"header__optionLineTwo\">& Orders</span>\r\n                    </div>\r\n                </Link>\r\n                {/* 3rd link */}\r\n                <Link className=\"header__link\">\r\n                    <div className=\"header__option\">\r\n                        <span className=\"header__optionLineOne\">Your</span>\r\n                        <span className=\"header__optionLineTwo\">Prime</span>\r\n                    </div>\r\n                </Link>\r\n                {/* 4th link */}\r\n                <Link to=\"/checkout\" className=\"header__link\">\r\n                    <div className=\"header__optionBasket\">\r\n                        {/* bascket icon */}\r\n                        <ShoppingBasketIcon/>\r\n                        {/* Number of items */}\r\n                        <span className=\"header__optionLineTwo header__basket\">{basket.length}</span>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header\r\n","// import React, { useState } from 'react';\r\n// import \"./Login.css\";\r\n// import { Link, useHistory } from \"react-router-dom\";\r\n// import { auth } from \"./firebase\";\r\n\r\n\r\n// function Login() {\r\n//     const history = useHistory();\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n\r\n//     const login = (event) => {\r\n//         event.preventDefault();\r\n//         //this stops the refresh.\r\n//         // do the logic.\r\n//         auth.signInWithEmailAndPassword(email, password)\r\n//             .then(auth => {\r\n//                 //logged in, redirect to homepage...\r\n//                 history.push('/');\r\n//         })\r\n//         .catch((e) => alert(e.message));\r\n//     };\r\n\r\n//     const register = (event) => {\r\n//         event.preventDefault();\r\n//         //this stops the refresh.\r\n//         // do the logic.\r\n//         auth\r\n//             .createUserWithEmailAndPassword(email, password)\r\n//             .then((auth) => {\r\n//                 //create a user and logged in, redirect to homepage\r\n//                 history.push(\"/\");\r\n//         })\r\n//         .catch((e) => alert(e.message));\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"login\">\r\n//             <Link to=\"/\">\r\n//                 <img\r\n//                     className=\"login__logo\"\r\n//                     src=\"CU_logo.png\"\r\n//                     alt=\"\"\r\n//                 />\r\n//             </Link>\r\n//             <div className=\"login__container\">\r\n//                 <h1>Sign in</h1>\r\n//                 <form>\r\n//                     <h5>E-mail</h5>\r\n//                     <input value={email} onChange={event => setEmail(event.target.value)} type=\"email\" />\r\n//                     <h5>Password</h5>\r\n//                     <input value={password} onChange={event => setPassword(event.target.value)} type=\"password\" />\r\n//                     <button onClick={login} type=\"submit\" className=\"login__signInButton\">\r\n//                         Sign In\r\n//                     </button>\r\n//                 </form>\r\n\r\n//                 <p>\r\n//                     By click this, you are agree to our policy.\r\n//                 </p>\r\n//                 <button onClick={register} className=\"login__RegisterButton\">\r\n//                     Create your account\r\n//                 </button>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Login\r\nimport React, { useState } from 'react';\r\nimport './Login.css'\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction Login() {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const signIn = e => {\r\n        e.preventDefault();\r\n\r\n        auth\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(auth => {\r\n                history.push('/')\r\n            })\r\n            .catch(error => alert(error.message))\r\n    }\r\n\r\n    const register = e => {\r\n        e.preventDefault();\r\n\r\n        auth\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then((auth) => {\r\n                // it successfully created a new user with email and password\r\n                if (auth) {\r\n                    history.push('/')\r\n                }\r\n            })\r\n            .catch(error => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <Link to='/'>\r\n                <img\r\n                    className=\"login__logo\"\r\n                    src='CU_logo.png' \r\n                    alt = ''\r\n                />\r\n            </Link>\r\n\r\n            <div className='login__container'>\r\n                <h1>Sign-in</h1>\r\n\r\n                <form>\r\n                    <h5>E-mail</h5>\r\n                    <input type='text' value={email} onChange={e => setEmail(e.target.value)} />\r\n\r\n                    <h5>Password</h5>\r\n                    <input type='password' value={password} onChange={e => setPassword(e.target.value)} />\r\n\r\n                    <button type='submit' onClick={signIn} className='login__signInButton'>Sign In</button>\r\n                </form>\r\n\r\n                <p>\r\n                    By signing-in you agree to the AMAZON FAKE CLONE Conditions of Use & Sale. Please\r\n                    see our Privacy Notice, our Cookies Notice and our Interest-Based Ads Notice.\r\n                </p>\r\n\r\n                <button onClick={register} className='login__registerButton'>Create your Amazon Account</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\nimport './Product.css';\nimport {Link} from \"react-router-dom\";\nfunction Product({title, image}) {\n    return (\n        <div className = \"product\">\n            <div className = \"product_info\">\n            <p className =\"product_optionLineThree\">{title}</p> \n        \n    \n            <img src = {image} alt = \"\"/>\n         \n            </div>\n\n        </div>\n    );\n}\n\nexport default Product\n","import React from 'react';\nimport \"./Home.css\";\nimport Product from './Product';\nimport {Link} from \"react-router-dom\";\n\nfunction Home() {\n    return (\n        <div className = \"home_image\">\n             \n            \n         <img\n        src = \"home.jpg\"\n        alt = \"\"\n      />\n     \n\n      <div className = \"home_row\"> \n      <Link to = \"/getapass\" className = \"header_link\">\n      <Product\n        title = \"GetAPass\"\n        image = \"getapass.jpeg\"\n        />\n        </Link>\n        <Link to = \"/pretraining\" className = \"header_link\">\n      <Product\n        title = \"Pre Training\"\n        image = \"pretraining.jpeg\"\n        />\n         </Link>\n         <Link to = \"/personalcenter\" className = \"header_link\">\n        <Product\n        title = \"Personal Center\"\n        image = \"PersonalCenter.jpg\"\n        />\n        </Link>\n        <Link to = \"/Inpersoncourses\" className = \"header_link\">\n<Product\n        title = \"Inperson Courses\"\n        image = \"logo512.png\"\n        />\n       </Link>\n\n        </div>\n        </div>\n    );\n}\n\nexport default Home\n","// import logo from './logo.svg';\nimport React, { useEffect } from \"react\";\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from './Header';\nimport Login from './Login';\nimport Home from './Home'\nimport { useStateValue } from \"./StateProvider\";\nimport { auth } from \"./firebase\";\n\n\n\nfunction App() {\n  const [{user}, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // will only run once when the app component loads...\n\n    auth.onAuthStateChanged((authUser) => {\n      console.log(\"THE USER IS >>> \", authUser);\n\n      if (authUser) {\n        // the user just logged in / the user was logged in\n\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser,\n        });\n      } else {\n        // the user is logged out\n        dispatch({\n          type: \"SET_USER\",\n          user: null,\n        });\n      }\n    });\n  }, []);\n  // const [{ user }, dispatch] = useStateValue();\n  // useEffect(() => {\n  //   const unsubscribe = auth.onAuthStateChanged((authUser) => {\n  //     if (authUser) {\n  //       // the user is logged in...\n\n  //       dispatch({\n  //         type: \"SET_USER\",\n  //         user: authUser,\n  //       });\n  //     } else {\n  //       // the user is logged out ...\n  //       dispatch({\n  //         type: \"SET_USER\",\n  //         user: null,\n  //       });\n  //     }\n  //   });\n  //   return () => {\n  //     // Any cleanup operations go in here...\n  //     unsubscribe();\n  //   };\n  // }, []);\n\n  console.log('USER IS >>> ', user);\n\n  return (\n    <Router>\n      <div className=\"App\">\n      <Switch>\n        <Route path=\"/checkout\">\n          <h1>Checkout</h1>\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        {/* This is the default route, BOTTOM ONE IS ALWAYS HOME PAGE*/}\n        <Route path=\"/\">\n          <Header />\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n    </Router>  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","export const initialState = {\r\n    basket: [],\r\n    user: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        \r\n        case 'GET_HEALTH_CODE':\r\n            //logic for get code\r\n            return { \r\n                ...state,\r\n                basket: [...state.basket, action.item],\r\n            }\r\n        case \"SET_USER\":\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n"],"sourceRoot":""}